class Solution {
    public int search(int[] nums, int target) {
        int left = 0, right = nums.length - 1;

        while (left <= right) {
            int mid = left + (right - left) / 2;

            if (nums[mid] == target) return mid;

            // 左半邊有序
            if (nums[left] <= nums[mid]) {
                if (target >= nums[left] && target < nums[mid]) {
                    right = mid - 1; // 在左半區間
                } else {
                    left = mid + 1;  // 在右半區間
                }
            }
            // 右半邊有序
            else {
                if (target > nums[mid] && target <= nums[right]) {
                    left = mid + 1;  // 在右半區間
                } else {
                    right = mid - 1; // 在左半區間
                }
            }
        }
        return -1;
    }

    public static void main(String[] args) {
        Solution sol = new Solution();
        System.out.println(sol.search(new int[]{4,5,6,7,0,1,2}, 0)); // 4
        System.out.println(sol.search(new int[]{4,5,6,7,0,1,2}, 3)); // -1
        System.out.println(sol.search(new int[]{1}, 0));             // -1
    }
}
